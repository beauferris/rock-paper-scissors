{"version":3,"sources":["images/bg-triangle.svg","images/icon-rock.svg","images/icon-paper.svg","images/icon-scissors.svg","components/ChoiceBoard.js","images/logo.svg","components/Header.js","components/PickedBoard.js","App.js","reportWebVitals.js","index.js"],"names":["ChoiceBoard","props","className","to","src","Triangle","alt","onClick","choice","id","Rock","Paper","Scissors","Header","logo","score","PickedBoard","choices","img","name","gameState","onclick","playAgain","AIChoice","App","useState","playerChoice","setPlayerChoice","Math","floor","random","toString","computerChoice","setComputerChoice","gameDecision","setGameDecision","setScore","rounds","setRounds","location","useLocation","choiceHandler","event","target","prevState","useEffect","TransitionGroup","CSSTransition","timeout","classNames","path","exact","render","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0caf2e0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-triangle.ee838cd8.svg\";","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","import Triangle from '../images/bg-triangle.svg';\nimport Rock from '../images/icon-rock.svg';\nimport Paper from '../images/icon-paper.svg';\nimport Scissors from '../images/icon-scissors.svg';\nimport { Link } from 'react-router-dom';\n\nimport './ChoiceBoard.css';\n\nconst ChoiceBoard = (props) => {\n    return (\n        <>\n            <div className='Board'>\n                <Link to='/picked'>\n                    <img src={Triangle} className='Triangle' alt='Background'></img>\n                </Link>\n\n                <Link to='/picked'>\n                    <div className='rock-circle' onClick={props.choice} id=\"0\" >\n                        <img src={Rock} onClick={props.choice} id=\"0\" className='icon' alt=\"Rock\"></img>\n                    </div>\n                </Link>\n                \n                <Link to='/picked'>\n                    <div className='paper-circle' onClick={props.choice} id=\"1\" >\n                        <img src={Paper} onClick={props.choice} className='icon' id='1' alt=\"Paper\" ></img>\n                    </div>\n                </Link>\n\n                <Link to='/picked'>\n                <div className='scissor-circle' onClick={props.choice} id=\"2\" >\n                    <img src={Scissors} onClick={props.choice} id=\"2\" className='icon' alt=\"Pair of scissors\"></img>\n                </div>\n                </Link>\n                \n            </div>\n        </>\n    )\n}\n\nexport default ChoiceBoard;","export default __webpack_public_path__ + \"static/media/logo.a4a2b39f.svg\";","import './Header.css';\nimport logo from '../images/logo.svg';\n\nconst Header = (props) => {\n    return (\n        <div className='Header'>\n            <div>\n                <img alt=\"header\" src={logo}></img>\n            </div>\n\n            <div className='score'>\n                <span className='score-title'>score</span><br></br>\n                <span className='score-number'>{props.score}</span>\n            </div>\n\n        </div>\n    )\n\n}\n\nexport default Header;","import Rock from '../images/icon-rock.svg'\nimport Paper from '../images/icon-paper.svg'\nimport Scissors from '../images/icon-scissors.svg'\nimport './PickedBoard.css'\nimport { Link } from 'react-router-dom';\n\nconst PickedBoard = (props) => {\n\n    const choices = [\n        { img: Rock, name: \"Rock\" },\n        { img: Paper, name: \"Paper\" },\n        { img: Scissors, name: \"Scissors\" }];\n\n    return (\n\n        <div className='choices'>\n\n            <div className='my-choice'>\n                <h4>You Picked</h4>\n                <div className={'choices-circle ' + choices[props.choice].name + \" \" + props.gameState} >\n                    <img src={choices[props.choice].img} className='icon' alt=\"Paper\" ></img>\n                </div>\n            </div>\n\n            <div className=\"message\">\n                <span className=\"game-message\">{props.gameState} </span>\n                <Link to=\"/\">\n                    <button onclick={props.playAgain}>Play Again</button>\n                </Link>\n            </div>\n\n\n            <div className='computer-choice'>\n                <h4>The House Picked</h4>\n                <div className={props.gameState === 'YOU LOSE' ? 'choices-circle ' + choices[props.AIChoice].name + ' WON' :\n                    'choices-circle ' + choices[props.AIChoice].name + \" \"} >\n                    <img src={choices[props.AIChoice].img} className='icon' alt=\"Paper\" ></img>\n                </div>\n            </div>\n\n        </div>\n\n    )\n}\n\nexport default PickedBoard;","import './App.css';\nimport Board from './components/ChoiceBoard'\nimport Header from './components/Header'\nimport { useState, useEffect } from 'react';\nimport PickedBoard from './components/PickedBoard';\nimport { Switch,Route,useLocation} from \"react-router-dom\";\n\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nfunction App() {\n  const [playerChoice, setPlayerChoice] = useState('0');\n  const [computerChoice, setComputerChoice] = useState((Math.floor(Math.random() * (2 + 1)).toString()));\n  const [gameDecision, setGameDecision] = useState('');\n  const [score, setScore] = useState(0);\n  const [rounds, setRounds] = useState(0);\n\n  const location = useLocation();\n\n  const choiceHandler = (event) => {\n  \n    setPlayerChoice(event.target.id)\n    setComputerChoice((Math.floor(Math.random() * (2 + 1)).toString()))\n    setRounds((prevState=> prevState+1));\n    \n  }\n\n  useEffect(() => {\n    if (playerChoice === '0') {\n      if (computerChoice === '0') {\n        setGameDecision('TIE');\n      } else if (computerChoice === '1') {\n        setGameDecision('YOU LOSE');\n      } else if (computerChoice === '2') {\n        setGameDecision(\"YOU WON\");\n        setScore((prevState)=>(prevState+1));\n      }\n    }\n\n    else if (playerChoice === '1') {\n      if (computerChoice === '0') {\n        setGameDecision('YOU WON');\n        setScore((prevState)=>(prevState+1));\n      } else if (computerChoice === '1') {\n        setGameDecision('TIE')\n      } else if (computerChoice === '2') {\n        setGameDecision(\"YOU LOSE\")\n      }\n    }\n    else if (playerChoice === '2') {\n      if (computerChoice === '0') {\n        setGameDecision('YOU LOSE');\n      } else if (computerChoice === '1') {\n        setGameDecision('YOU WON');\n        setScore((prevState)=>(prevState+1));\n      } else if (computerChoice === '2') {\n        setGameDecision(\"TIE\")\n      }\n    }\n\n    \n\n  }, [playerChoice, computerChoice, rounds])\n\n  return (\n    <div className=\"App\">\n      <Header score={score}/>\n        <TransitionGroup>\n          <CSSTransition \n          timeout={10}\n           classNames='ease'\n           key={location.key}\n           >\n            <Switch>\n              <Route path='/'\n                exact={true}\n                render={props => <Board choice={choiceHandler} {...props} />} />\n              <Route\n                path='/picked'\n                render={props => <PickedBoard gameState={gameDecision} choice={playerChoice} AIChoice={computerChoice} {...props} />} />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}